describe('Valid trip addition', () => {
  beforeEach(function() {
    cy.request('POST', 'http://localhost:3001/test/reset')
    cy.visit('http://localhost:3000/addTrip')
  })

  it('Adding valid trip gives correct alert', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.contains('Added trip!')
  })

  it('Submiting valid form adds trip to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request('GET', 'http://localhost:3001/api/trip/').as('tripsReq')
    //Checking that the trip was added to the database
    cy.get('@tripsReq')
      .then((res) => {
        expect(res.body.length).to.equal(1)
        const trip = res.body[0]
        expect(trip.departure_time).to.equal('2021-05-31T23:57:25')
        expect(trip.return_time).to.equal('2021-06-01T00:05:46')
        expect(trip.departure_station.name).to.equal('Laajalahden aukio')
        expect(trip.departure_station.station_id).to.equal(94)
        expect(trip.return_station.name).to.equal('Teljäntie')
        expect(trip.return_station.station_id).to.equal(100)
        expect(trip.distance).to.equal(2043)
        expect(trip.duration).to.equal(500)
      })
  })
  it('After adding a trip, trips are correctly displayed', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.visit('http://localhost:3000/trips')
    cy.contains('2021-05-31T23:57:25')
    cy.contains('2021-06-01T00:05:46')
    cy.contains('Laajalahden aukio')
    cy.contains('94')
    cy.contains('Teljäntie')
    cy.contains('100')
    cy.contains('2.043')
    cy.contains('8.333')
  })
  it('After adding a trip, stations are correctly displayed', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.visit('http://localhost:3000/stations')
    cy.contains('Laajalahden aukio')
    cy.contains('94')
    cy.contains('Teljäntie')
    cy.contains('100')
  })
})
//cy.request({method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false}).its('status').should('equal', 404)
describe('Invalid trip addition', function() {
  beforeEach(function() {
    cy.request('POST', 'http://localhost:3001/test/reset')
    cy.visit('http://localhost:3000/addTrip')
  })
  it('Invalid trip addition gives error message', function() {
    cy.get('#TripSubmitButton').click()
    cy.contains('Invalid or missing trip information')
  })
  it('Trip with invalid departure time is not added to db', function() {
    cy.get('#DepartureTimeInput').type('Departure time')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid return time is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('Return time')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid departure station name is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid departure station id is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('-94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid return station name is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid return station id is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('-100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid distance is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('-2043')
    cy.get('#DurationInput').type('500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with invalid duration is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('-500')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
  it('Trip with duration that does not match with departure time and return time is not added to db', function() {
    cy.get('#DepartureTimeInput').type('2021-05-31T23:57:25')
    cy.get('#ReturnTimeInput').type('2021-06-01T00:05:46')
    cy.get('#DepartureNameInput').type('Laajalahden aukio')
    cy.get('#DepartureIdInput').type('94')
    cy.get('#ReturnNameInput').type('Teljäntie')
    cy.get('#ReturnIdInput').type('100')
    cy.get('#DistanceInput').type('2043')
    cy.get('#DurationInput').type('15')
    cy.get('#TripSubmitButton').click()
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/trips', failOnStatusCode: false }).its('status').should('equal', 404)
    cy.request({ method: 'GET', url: 'http://localhost:3001/api/station', failOnStatusCode: false }).its('status').should('equal', 404)
  })
})
